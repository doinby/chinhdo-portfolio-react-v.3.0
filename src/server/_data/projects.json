[
   {
      "title": "The Forgotten Adoption Option App",
      "desc": "Living in the U.S. and thinking about adoption? FAO aims to increase the chance of 400,000 waiting children finding their forever home by offering potential parent(s) with actionable 8-steps guide",
      "content": "",
      "coverImg": "/images/screenshots/cover-forgotten.jpg",
      "live": "https://forgottenadoptionoption.app/",
      "lastUpdated": "2023-05-02",
      "stacks": [
         "React",
         "Typescript",
         "MUI"
      ]
   },
   {
      "title": "Nanum Movie App",
      "desc": "Not just another IMDB, Nanum (Í≥µÏú†, means ‚Äúsharing‚Äù) is your go-to movie suggesting app. Take your pick at the most popular, or get a collection of titles based on how you are feeling",
      "content": "",
      "coverImg": "/images/screenshots/cover-nanum.jpg",
      "github": "https://github.com/chingu-voyages/v41-geckos-team-18",
      "live": "https://movie-app-geckos-18.netlify.app/",
      "lastUpdated": "2023-02-13",
      "stacks": [
         "React",
         "Typescript",
         "Tailwind"
      ]
   },
   {
      "title": "Nation Flags",
      "desc": "Nation Flags allows users to look up crucial information about a country. Population, capital, native name, national flag, etc. are organised in a clear and concise manner, allowing for effortless information flow",
      "content": "Nation Flags allows users to look up crucial information about a country. Population, capital, native name, national flag, etc. are organised in a clear and concise manner, allowing for effortless information flow.\n\nThis is a solo project üåü\n\nThe app proposal and figma design file was provided by [Frontend Mentor](https://www.frontendmentor.io/challenges/rest-countries-api-with-color-theme-switcher-5cacc469fec04111f7b848ca). All country data were fetched via [REST Countries API](https://restcountries.com/).\n\n### The challenge\n\nUsers should be able to:\n\n- See all countries from the API on the homepage\n- Search for a country using an `input` field\n- Filter countries by region\n- Click on a country to see more detailed information on a separate page\n- Click through to the border countries on the detail page\n- Toggle the color scheme between light and dark mode _(optional)_\n\n### Built with\n\n- [React](https://reactjs.org/)\n- [Typescript](https://www.typescriptlang.org/)\n- [Tailwind](https://tailwindcss.com/)\n- [ReactRouter](https://reactrouter.com/)\n- [HeadlessUI](https://headlessui.com/)\n- Semantic HTML5 markup\n- CSS Flexbox, Grid\n- Mobile-first workflow\n\n### What I learned\n\n- The power of Typescript üí™\n- Tailwind darkmode is amazing üåì. Take that, MUI! üëé\n- Get param query and turn it into API call ü§Ø\n- Getting instant result from search query is very challenging ü•µ\n- React handling passing down props well enough that I didn't have the need for `useContext` hook ü§ó\n\n### Continued development\n\n- Apply [debounce](https://blog.webdevsimplified.com/2020-10/react-debounce/) to search query to improve search result filter\n- Improve error feedbacks - more specific error messages\n- Replace `type: any` with mode specific types\n- Purge unused packages and unused Tailwind class\n\n### Useful resources\n\n- [React Typescript Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/basic_type_example/) - Great code example of declaring common React types\n- [Ultimate React Router 6 Guide](https://blog.webdevsimplified.com/2022-07/react-router/) - I used this to learn how to dynamically route individual country page, what `useParam()` does, how to use `<Link>` and `<Outlet />`\n",
      "coverImg": "/images/screenshots/cover-nation.jpg",
      "screenshots": [
         "/images/screenshots/nation/screenshot-home-light.jpg",
         "/images/screenshots/nation/screenshot-home-dark.jpg",
         "/images/screenshots/nation/screenshot-country-light.jpg"
      ],
      "github": "https://github.com/doinby/nation-flags-react-typescript",
      "live": "https://nation-flags.co/",
      "lastUpdated": "2022-09-08",
      "stacks": [
         "React",
         "Typescript",
         "Tailwind"
      ]
   },
   {
      "title": "Currency Conversion App",
      "desc": "Currency Conversion App uses ExchangeRate-API to update the most current rate on the market. Featuring 160 common currencies, automatic update new changes, and switching places between 2 currencies",
      "coverImg": "/images/screenshots/cover-currency.jpg",
      "github": "https://github.com/doinby/currency-conversion-react",
      "live": "https://cc-react.co/",
      "lastUpdated": "2022-08-23",
      "stacks": [
         "React",
         "Sass"
      ]
   }
]